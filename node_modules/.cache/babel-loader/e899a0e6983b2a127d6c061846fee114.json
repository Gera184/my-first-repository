{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Boss\\\\sky-scanner\\\\src\\\\pages\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nexport const Pokemon = () => {\n  _s();\n\n  const [data, setData] = useState(\"\");\n  const [randomNum, setRandomNum] = useState(5);\n  const [minVal, setMinVal] = useState(10);\n  const [maxVal, setMaxVal] = useState(100);\n  const URL = `https://api.imgflip.com/get_memes`;\n\n  const hundleOnSumbit = e => {\n    e.preventDefault();\n    axios.get(URL).then(res => {\n      setData(res.data.data.memes[randomNum]);\n    }).catch(err => console.log(err));\n  };\n\n  console.log(data);\n  useEffect(() => {\n    setRandomNum(Math.floor(Math.random() * (maxVal - minVal + 1) + minVal));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: hundleOnSumbit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              offset: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-danger \",\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 8,\n            offset: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", data.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 6,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: data.url,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pokemon, \"5kT5f1C465nLRi+K38sM97kQ2Nw=\");\n\n_c = Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["C:/Users/Boss/sky-scanner/src/pages/Pokemon.js"],"names":["React","useEffect","useState","axios","Container","Row","Col","Image","Pokemon","data","setData","randomNum","setRandomNum","minVal","setMinVal","maxVal","setMaxVal","URL","hundleOnSumbit","e","preventDefault","get","then","res","memes","catch","err","console","log","Math","floor","random","offset","span","name","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,GAAD,CAApC;AAEA,QAAMe,GAAG,GAAI,mCAAb;;AAEA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,KAAK,CACFkB,GADH,CACOJ,GADP,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbb,MAAAA,OAAO,CAACa,GAAG,CAACd,IAAJ,CAASA,IAAT,CAAce,KAAd,CAAoBb,SAApB,CAAD,CAAP;AACD,KAJH,EAKGc,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,GARD;;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBhB,MAAM,GAAGF,MAAT,GAAkB,CAAnC,IAAwCA,MAAnD,CAAD,CAAZ;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BAEJ,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACQ;AAAM,QAAA,QAAQ,EAAEK,cAAhB;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEc,cAAAA,MAAM,EAAE;AAAV,aAAT;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAFI,eAcE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWD,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAA,iCACE;AAAA,4BAAMvB,IAAI,CAACyB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE,CAAR;AAAWD,YAAAA,MAAM,EAAC;AAAlB,WAAT;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAEvB,IAAI,CAAC0B,GAAjB;AAAsB,YAAA,KAAK;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArDM;;GAAM3B,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nexport const Pokemon = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const [randomNum, setRandomNum] = useState(5);\r\n  const [minVal, setMinVal] = useState(10);\r\n  const [maxVal, setMaxVal] = useState(100);\r\n\r\n  const URL = `https://api.imgflip.com/get_memes`;\r\n\r\n  const hundleOnSumbit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(URL)\r\n      .then((res) => {\r\n        setData(res.data.data.memes[randomNum]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    setRandomNum(Math.floor(Math.random() * (maxVal - minVal + 1) + minVal));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n\r\n<Container fluid>\r\n        <form onSubmit={hundleOnSumbit}>\r\n          <Row>\r\n            <Col md={{ offset: 5 }}>\r\n              <button type=\"submit\" class=\"btn btn-danger \">\r\n                Generate\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </form>\r\n      </Container>\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 3 }}>\r\n            <h1> {data.name} </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ span: 6, offset:6 }}>\r\n            <Image src={data.url} fluid />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}